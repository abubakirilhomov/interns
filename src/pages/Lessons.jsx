import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { createLesson, resetLessonState } from "../store/slices/lessonSlice";
import axios from "axios";
import { toast, ToastContainer } from "react-toastify";

const API_URL = import.meta.env.VITE_API_URL || "http://localhost:8000/api";

const AddLessonPage = () => {
  const dispatch = useDispatch();
  const { user } = useSelector((state) => state.auth); // Get logged-in intern
  const { isLoading, error, success } = useSelector((state) => state.lessons);

  const [topic, setTopic] = useState("");
  const [time, setTime] = useState("");
  const [group, setGroup] = useState("");
  const [feedback, setFeedback] = useState("");
  const [mentors, setMentors] = useState([]);
  const [selectedMentor, setSelectedMentor] = useState("");
  console.log(success);

  useEffect(() => {
    if (success) {
      toast.success("–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
      dispatch(resetLessonState()); // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º success
    }
  }, [success, dispatch]);

  // Fetch available mentors
  useEffect(() => {
    const fetchMentors = async () => {
      try {
        const res = await axios.get(`${API_URL}/mentors`);
        setMentors(res.data);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—Ç–æ—Ä–æ–≤:", err);
      }
    };
    fetchMentors();
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (!topic || !time || !group || !selectedMentor) {
      return alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è");
    }

    const lessonData = {
      intern: user?._id,
      mentor: selectedMentor,
      topic,
      time,
      group,
      feedback: feedback || undefined, // Optional field
    };

    dispatch(createLesson(lessonData));

    setTopic("");
    setTime("");
    setGroup("");
    setFeedback("");
    setSelectedMentor("");
  };

  return (
    <div className="max-w-lg mx-auto mt-10 p-6 bg-base-300 shadow rounded-lg">
      <h2 className="text-xl font-bold mb-4">–î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫</h2>

      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label className="block font-medium">–¢–µ–º–∞ —É—Ä–æ–∫–∞ *</label>
          <input
            type="text"
            className="input input-bordered text-base w-full"
            value={topic}
            onChange={(e) => setTopic(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: React Basics"
          />
        </div>

        <div>
          <label className="block font-medium">–í—Ä–µ–º—è *</label>
          <input
            type="datetime-local"
            className="input input-bordered w-full"
            value={time}
            onChange={(e) => setTime(e.target.value)}
          />
        </div>

        <div>
          <label className="block font-medium">–ì—Ä—É–ø–ø–∞ *</label>
          <input
            type="text"
            className="input input-bordered text-base w-full"
            value={group}
            onChange={(e) => setGroup(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Group A"
          />
        </div>

        <div>
          <label className="block font-medium">–ú–µ–Ω—Ç–æ—Ä *</label>
          <select
            className="select select-bordered w-full"
            value={selectedMentor}
            onChange={(e) => setSelectedMentor(e.target.value)}
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—Ç–æ—Ä–∞</option>
            {mentors.map((mentor) => (
              <option key={mentor._id} value={mentor._id}>
                {mentor.name}
              </option>
            ))}
          </select>
        </div>

        <div>
          <label className="block font-medium">–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</label>
          <select
            className="select select-bordered w-full"
            value={feedback}
            onChange={(e) => setFeedback(e.target.value)}
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</option>
            <option value="üî•">üî• –û—Ç–ª–∏—á–Ω–æ</option>
            <option value="üëç">üëç –•–æ—Ä–æ—à–æ</option>
            <option value="üòê">üòê –ù–æ—Ä–º–∞–ª—å–Ω–æ</option>
            <option value="üëé">üëé –ü–ª–æ—Ö–æ</option>
          </select>
        </div>

        {error && <p className="text-red-500">{error}</p>}

        <button
          type="submit"
          className="btn btn-primary w-full"
          disabled={isLoading}
        >
          {isLoading ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫"}
        </button>
      </form>
      <ToastContainer position="top-right" />
    </div>
  );
};

export default AddLessonPage;
